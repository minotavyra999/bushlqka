document.addEventListener("DOMContentLoaded", function () {
  const form = document.querySelector(".bushlyaka-booking-form form");
  if (!form) return;

  const dateInput = form.querySelector(".bush-date-range");
  const sectorEls = form.querySelectorAll(".bush-sector");
  const anglersSelect = form.querySelector("select[name='anglers']");
  const secondHasCardCheckbox = form.querySelector("input[name='secondHasCard']");
  const priceEstimateEl = form.querySelector(".bush-price-estimate");
  const errorGlobal = form.querySelector(".bush-error-global");
  const paySelect = form.querySelector("select[name='payMethod']");

  let prices = null;
  let unavailableSectors = [];
  let blackouts = []; // [{ from:'2025-09-18', to:'2025-09-22' }, ...]

  /** Helpers */
  function showError(msg) {
    if (errorGlobal) {
      errorGlobal.textContent = msg;
      errorGlobal.style.display = "block";
    } else {
      alert(msg);
    }
  }
  function clearError() {
    if (errorGlobal) {
      errorGlobal.textContent = "";
      errorGlobal.style.display = "none";
    }
  }

  /** 1) –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ü–µ–Ω–∏ */
  async function loadPrices() {
    const r = await fetch(bushlyaka.restUrl + "pricing");
    if (!r.ok) throw new Error("Pricing API error");
    prices = await r.json();
  }

  /** 2) –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –º–µ—Ç–æ–¥–∏ –∑–∞ –ø–ª–∞—â–∞–Ω–µ –∏ –ø–æ–ø—ä–ª–≤–∞–Ω–µ –Ω–∞ dropdown */
  async function loadPayMethods() {
    if (!paySelect) return;
    paySelect.innerHTML = '<option value="">' + "‚Äî –∏–∑–±–µ—Ä–µ—Ç–µ ‚Äî" + "</option>";
    const r = await fetch(bushlyaka.restUrl + "payments/methods");
    if (!r.ok) return;
    const methods = await r.json();
    if (Array.isArray(methods) && methods.length) {
      methods.forEach(m => {
        const opt = document.createElement("option");
        opt.value = m.id || m.name || ""; // –∞–∫–æ –Ω—è–º–∞—à id –≤ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞, –ø–æ–ª–∑–≤–∞–π name
        opt.textContent = m.name || "–ú–µ—Ç–æ–¥";
        paySelect.appendChild(opt);
      });
    } else {
      // –Ω—è–º–∞ –º–µ—Ç–æ–¥–∏ ‚Äì –æ—Å—Ç–∞–≤—è–º–µ placeholder
      const opt = document.createElement("option");
      opt.value = "";
      opt.textContent = "–ù—è–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏ –º–µ—Ç–æ–¥–∏";
      paySelect.appendChild(opt);
    }
  }

  /** 3) –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ blackout –ø–µ—Ä–∏–æ–¥–∏ */
  async function loadBlackouts() {
    const r = await fetch(bushlyaka.restUrl + "blackouts");
    if (!r.ok) return;
    const data = await r.json();
    if (Array.isArray(data)) {
      blackouts = data.map(b => {
        // –æ—á–∞–∫–≤–∞–º–µ start/end = 'YYYY-MM-DD'
        return { from: b.start, to: b.end };
      });
    }
  }

  /** 4) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ Flatpickr ‚Äì inline, –≤–∏–Ω–∞–≥–∏ –æ—Ç–≤–æ—Ä–µ–Ω, —Å blackout-–∏ */
  function initCalendar() {
    if (typeof flatpickr === "undefined" || !dateInput) return;
    flatpickr(dateInput, {
      mode: "range",
      dateFormat: "Y-m-d",
      inline: true,        // ‚úÖ –≤–∏–Ω–∞–≥–∏ –æ—Ç–≤–æ—Ä–µ–Ω
      minDate: "today",
      disable: blackouts,  // –±–ª–æ–∫–∏—Ä–∞–Ω–µ –Ω–∞ –¥–∞—Ç–∞/–∏–Ω—Ç–µ—Ä–≤–∞–ª
      onChange: function (selectedDates, dateStr) {
        // dateStr –ø—Ä–∏ range –µ "YYYY-MM-DD to YYYY-MM-DD"
        if (selectedDates.length === 2) {
          fetchAvailability(selectedDates[0], selectedDates[1]);
        }
      },
    });
  }

  /** 5) –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∑–∞–µ—Ç–∏ —Å–µ–∫—Ç–æ—Ä–∏ –∑–∞ –∏–∑–±—Ä–∞–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω */
  async function fetchAvailability(startDate, endDate) {
    clearError();
    try {
      const payload = {
        start: startDate.toISOString().split("T")[0],
        end: endDate.toISOString().split("T")[0],
      };
      const r = await fetch(bushlyaka.restUrl + "availability", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "X-WP-Nonce": bushlyaka.nonce,
        },
        body: JSON.stringify(payload),
      });
      const data = await r.json();
      unavailableSectors = Array.isArray(data.unavailable) ? data.unavailable.map(String) : [];
      paintUnavailable();
    } catch (e) {
      showError("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∑–∞–µ—Ç–æ—Å—Ç.");
    }
  }

  /** 6) –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è—Ç–∞ –Ω–∞ —Å–µ–∫—Ç–æ—Ä–∏—Ç–µ */
  function paintUnavailable() {
    sectorEls.forEach(el => {
      const s = String(el.dataset.sector);
      if (unavailableSectors.includes(s)) {
        el.classList.add("unavailable");
        el.classList.remove("selected");
      } else {
        el.classList.remove("unavailable");
      }
    });
  }

  /** 7) –ö–∞–ª–∫—É–ª–∞—Ü–∏—è –Ω–∞ —Ü–µ–Ω–∞ —Å–ø—Ä—è–º–æ –∏—Å–∫–∞–Ω–∞—Ç–∞ –ª–æ–≥–∏–∫–∞ */
  function updateEstimate() {
    if (!prices) return;
    const anglers = parseInt(anglersSelect.value || "1", 10);
    const secondHasCard = !!secondHasCardCheckbox.checked;
    let total = 0;

    if (anglers === 1) {
      total = Number(prices.base);
    } else if (anglers === 2 && secondHasCard) {
      total = Number(prices.base) + Number(prices.second_with_card);
    } else if (anglers === 2) {
      total = Number(prices.base) + Number(prices.second);
    }

    priceEstimateEl.textContent = total.toFixed(2) + " –ª–≤.";
  }

  /** 8) –°–ª—É—à–∞—Ç–µ–ª–∏ */
  sectorEls.forEach(el => {
    el.addEventListener("click", () => {
      if (el.classList.contains("unavailable")) return;
      sectorEls.forEach(s => s.classList.remove("selected"));
      el.classList.add("selected");
    });
  });
  anglersSelect.addEventListener("change", updateEstimate);
  secondHasCardCheckbox.addEventListener("change", updateEstimate);

  /** 9) Submit –Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∞ */
  form.addEventListener("submit", async function (e) {
    e.preventDefault();
    clearError();

    const selectedSectorEl = form.querySelector(".bush-sector.selected");
    if (!selectedSectorEl) return showError("–ú–æ–ª—è, –∏–∑–±–µ—Ä–µ—Ç–µ —Å–µ–∫—Ç–æ—Ä.");

    // –≤–∑–µ–º–∞–º–µ range –æ—Ç flatpickr –∏–Ω–ø—É—Ç–∞
    const raw = dateInput.value || "";
    const parts = raw.split(" to ");
    if (parts.length < 2) return showError("–ú–æ–ª—è, –∏–∑–±–µ—Ä–µ—Ç–µ –Ω–∞—á–∞–ª–Ω–∞ –∏ –∫—Ä–∞–π–Ω–∞ –¥–∞—Ç–∞.");

    const start = parts[0].trim();
    const end = parts[1].trim();

    const payload = {
      start,
      end,
      sector: selectedSectorEl.dataset.sector,
      anglers: parseInt(anglersSelect.value || "1", 10),
      secondHasCard: !!secondHasCardCheckbox.checked,
      client: {
        firstName: form.querySelector("input[name='firstName']").value.trim(),
        lastName: form.querySelector("input[name='lastName']").value.trim(),
        email: form.querySelector("input[name='email']").value.trim(),
        phone: form.querySelector("input[name='phone']").value.trim(),
      },
      notes: form.querySelector("textarea[name='notes']").value.trim(),
      payMethodId: paySelect ? paySelect.value : "",
    };

    // –±–∞–∑–æ–≤–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!payload.client.firstName || !payload.client.lastName) return showError("–í—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ –∏ —Ñ–∞–º–∏–ª–∏—è.");
    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(payload.client.email)) return showError("–ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª.");
    if (!/^[0-9+\-\s]{6,20}$/.test(payload.client.phone)) return showError("–ù–µ–≤–∞–ª–∏–¥–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω.");

    const btn = form.querySelector("button[type='submit']");
    if (btn) { btn.disabled = true; btn.textContent = bushlyaka.messages.loading; }

    try {
      const r = await fetch(bushlyaka.restUrl + "bookings", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "X-WP-Nonce": bushlyaka.nonce,
        },
        body: JSON.stringify(payload),
      });
      const res = await r.json();
      if (!r.ok || !res.ok) {
        throw new Error(res.message || bushlyaka.messages.error);
      }
      alert(bushlyaka.messages.success + (res.price ? (" –¶–µ–Ω–∞: " + res.price + " –ª–≤.") : ""));
      window.location.href = bushlyaka.redirectUrl;
    } catch (err) {
      showError(err.message || bushlyaka.messages.error);
    } finally {
      if (btn) { btn.disabled = false; btn.textContent = "–ò–∑–ø—Ä–∞—Ç–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"; }
    }
  });

  /** üîÑ –°—Ç–∞—Ä—Ç–æ–≤ bootstrap: —Ü–µ–Ω–∏ ‚Üí –º–µ—Ç–æ–¥–∏ ‚Üí blackout-–∏ ‚Üí –∫–∞–ª–µ–Ω–¥–∞—Ä */
  (async function bootstrap() {
    try {
      await loadPrices();
      updateEstimate();
      await loadPayMethods();
      await loadBlackouts();
      initCalendar();
    } catch (e) {
      // –Ω–µ —Å–ø–∏—Ä–∞–º–µ UI, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–≤–∞–º–µ
      console.warn(e);
      initCalendar();
    }
  })();
});
